--- a/modmain.lua
+++ b/modmain.lua
@@ -210,11 +210,11 @@
         if not is_on_geometricplacement then
             if self.inst.prefab == "seeds_placer" and _G.ThePlayer ~= nil and _G.ThePlayer:HasTag("plantkin") then
                 if not _G.TheInput:ControllerAttached() then
+                    -- always snap to the closest position
                     local ipos = _G.TheInput:GetWorldPosition()
-                    if _G.TheWorld.Map:CanTillSoilAtPoint(ipos.x, ipos.y, ipos.z, true) then
-                        local pos = _G.ThePlayer.components.snaptiller:GetSnap(ipos)
-                        self.inst.Transform:SetPosition(pos:Get())
-                    end
+                    local pos = _G.ThePlayer.components.snaptiller:GetSnap(ipos)
+                    self.inst.Transform:SetPosition(pos:Get())
+                    self.selected_pos = pos
                 --[[
                 else
                     local x, y, z = _G.ThePlayer.entity:LocalToWorldSpace(0, 0, 0)
@@ -403,6 +403,18 @@
     end
 end)
 
+-- wormwood deploy test
+AddClassPostConstruct("components/inventoryitem_replica", function(self, inst)
+    local _CanDeploy = self.CanDeploy
+    self.CanDeploy = function(self, pt, ...)
+        -- ACTIONS.DEPLOY.stroverridefn does not use intensive checks, so do the same here
+        if self.inst:HasTag("deployedfarmplant") and _G.ThePlayer.components.snaptiller.snapmode ~= 0 then
+            pt = _G.ThePlayer.components.snaptiller:GetSnap(pt)
+        end
+        return _CanDeploy(self, pt, ...)
+    end
+end)
+
 -- for support controller 
 AddClassPostConstruct("widgets/inventorybar", function(self)
     local original_OnControl = self.OnControl
